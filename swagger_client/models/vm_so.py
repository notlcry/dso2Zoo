# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class VmSO(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        VmSO - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'manage_ip': 'str',
            'mac': 'str',
            'service_ip': 'str',
            'public_ip': 'str',
            'public_gateway': 'str',
            'public_net_mask': 'str',
            'service_mac': 'str',
            'status': 'str',
            'type': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'manage_ip': 'manageIP',
            'mac': 'mac',
            'service_ip': 'serviceIP',
            'public_ip': 'publicIP',
            'public_gateway': 'publicGateway',
            'public_net_mask': 'publicNetMask',
            'service_mac': 'serviceMac',
            'status': 'status',
            'type': 'type'
        }

        self._id = None
        self._manage_ip = None
        self._mac = None
        self._service_ip = None
        self._public_ip = None
        self._public_gateway = None
        self._public_net_mask = None
        self._service_mac = None
        self._status = None
        self._type = None

    @property
    def id(self):
        """
        Gets the id of this VmSO.


        :return: The id of this VmSO.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this VmSO.


        :param id: The id of this VmSO.
        :type: str
        """
        self._id = id

    @property
    def manage_ip(self):
        """
        Gets the manage_ip of this VmSO.


        :return: The manage_ip of this VmSO.
        :rtype: str
        """
        return self._manage_ip

    @manage_ip.setter
    def manage_ip(self, manage_ip):
        """
        Sets the manage_ip of this VmSO.


        :param manage_ip: The manage_ip of this VmSO.
        :type: str
        """
        self._manage_ip = manage_ip

    @property
    def mac(self):
        """
        Gets the mac of this VmSO.


        :return: The mac of this VmSO.
        :rtype: str
        """
        return self._mac

    @mac.setter
    def mac(self, mac):
        """
        Sets the mac of this VmSO.


        :param mac: The mac of this VmSO.
        :type: str
        """
        self._mac = mac

    @property
    def service_ip(self):
        """
        Gets the service_ip of this VmSO.


        :return: The service_ip of this VmSO.
        :rtype: str
        """
        return self._service_ip

    @service_ip.setter
    def service_ip(self, service_ip):
        """
        Sets the service_ip of this VmSO.


        :param service_ip: The service_ip of this VmSO.
        :type: str
        """
        self._service_ip = service_ip

    @property
    def public_ip(self):
        """
        Gets the public_ip of this VmSO.


        :return: The public_ip of this VmSO.
        :rtype: str
        """
        return self._public_ip

    @public_ip.setter
    def public_ip(self, public_ip):
        """
        Sets the public_ip of this VmSO.


        :param public_ip: The public_ip of this VmSO.
        :type: str
        """
        self._public_ip = public_ip

    @property
    def public_gateway(self):
        """
        Gets the public_gateway of this VmSO.


        :return: The public_gateway of this VmSO.
        :rtype: str
        """
        return self._public_gateway

    @public_gateway.setter
    def public_gateway(self, public_gateway):
        """
        Sets the public_gateway of this VmSO.


        :param public_gateway: The public_gateway of this VmSO.
        :type: str
        """
        self._public_gateway = public_gateway

    @property
    def public_net_mask(self):
        """
        Gets the public_net_mask of this VmSO.


        :return: The public_net_mask of this VmSO.
        :rtype: str
        """
        return self._public_net_mask

    @public_net_mask.setter
    def public_net_mask(self, public_net_mask):
        """
        Sets the public_net_mask of this VmSO.


        :param public_net_mask: The public_net_mask of this VmSO.
        :type: str
        """
        self._public_net_mask = public_net_mask

    @property
    def service_mac(self):
        """
        Gets the service_mac of this VmSO.


        :return: The service_mac of this VmSO.
        :rtype: str
        """
        return self._service_mac

    @service_mac.setter
    def service_mac(self, service_mac):
        """
        Sets the service_mac of this VmSO.


        :param service_mac: The service_mac of this VmSO.
        :type: str
        """
        self._service_mac = service_mac

    @property
    def status(self):
        """
        Gets the status of this VmSO.


        :return: The status of this VmSO.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this VmSO.


        :param status: The status of this VmSO.
        :type: str
        """
        self._status = status

    @property
    def type(self):
        """
        Gets the type of this VmSO.


        :return: The type of this VmSO.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this VmSO.


        :param type: The type of this VmSO.
        :type: str
        """
        self._type = type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

